name: Styles test workflow

permissions:
   contents: read

on:
  pull_request:
    paths: [map-styles/**, scripts/**, .github/workflows/new-test-workflow.yaml]
  workflow_dispatch:

env:
  STYLES: '[standard, satellite, mono]'

jobs:
  deploy:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.changed-files.outputs.all_changed_files }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v44
        with:
          matrix: true
          dir_names: true
          dir_names_exclude_current_dir: true
      
      - name: Debug changed files output
        run: |
          echo "Changed files: ${{ steps.changed-files.outputs.all_changed_files }}"
          echo "Changed folders: ${{ steps.changed-files.outputs.all_changed_folders }}"
      
      - name: Check for style changes
        run: |
          echo "Changed folders: ${{ steps.changed-files.outputs.all_changed_folders }}"
          STYLES=${{ toJson(env.STYLES) }}
          changed_folders=$(echo "${{ steps.changed-files.outputs.all_changed_folders }}" | tr '\n' ' ')
          echo "Changed folders after processing: $changed_folders"
          for folder in $changed_folders; do
            echo "Checking folder: $folder"
            if [[ "$folder" == *"${STYLES}"* ]]; then
              echo "Changes detected in folder $folder, deploying..."
              exit 0
            fi
          done
          echo "No changes detected in relevant folders."

      - name: Check for script changes
        run: |
          echo "Changed folders: ${{ steps.changed-files.outputs.all_changed_folders }}"
          STYLES=${{ toJson(env.STYLES) }}
          changed_folders=$(echo "${{ steps.changed-files.outputs.all_changed_folders }}" | tr '\n' ' ')
          echo "Changed folders after processing: $changed_folders"
          for folder in $changed_folders; do
            echo "Checking folder: $folder"
            if [[ "$folder" == *"/scripts"* ]]; then
              for style in ${STYLES[@]}; do
                if [[ "$folder" == *"$style"* ]]; then
                  echo "Changes detected in folder $folder, deploying..."
                  exit 0
                fi
              done
            fi
          done
          echo "No changes detected in relevant folders."
      
